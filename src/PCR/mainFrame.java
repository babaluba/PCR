/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PCR;

import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JFormattedTextField;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author stas
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    
    DefaultTableModel TABEL_MOD;
    MaskFormatter formatter1 = null;
    MaskFormatter formatter2;
    int commonInt = 0;
    int colnumb, rownumb;
    String strBuf = "";
    RemoteDeviceDiscovery RDD;
    ServicesSearch SS;
    public mainFrame() {
        
        try {
           formatter1 = new MaskFormatter("***");
           formatter2 = new MaskFormatter("***");
           formatter2.setValidCharacters(" 0123456789");
       } catch (java.text.ParseException exc) {
         // требуется ручное исключение
       }
        try {
            RDD = new RemoteDeviceDiscovery();
        } catch (IOException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        TABEL_MOD = (DefaultTableModel) jtInputs.getModel();
        jtInputs.addMouseListener(new MouseListener() {
            
            @Override
            public void mouseClicked(MouseEvent e) {
                colnumb = jtInputs.getSelectedColumn();
                rownumb = jtInputs.getSelectedRow();
                strBuf = TABEL_MOD.getValueAt(rownumb, colnumb).toString();// Доделать
                //не правильно
                //добавить номер ячейки из таблицы
                if(jtbAuto.isSelected()){
                    if(strBuf.equals("") || strBuf.equals("   ")){
                        
                        TABEL_MOD.setValueAt(commonInt, rownumb, colnumb);
                        commonInt++;
                        
                    }
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
                
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                
            }

            @Override
            public void mouseExited(MouseEvent e) {
                
            }
        });
       
        
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jpInput = new javax.swing.JPanel();
        jpOperator = new javax.swing.JPanel();
        jlSurname = new javax.swing.JLabel();
        jtfSurname = new javax.swing.JTextField();
        jlName = new javax.swing.JLabel();
        jtfName = new javax.swing.JTextField();
        jbInput = new javax.swing.JButton();
        jlLastName = new javax.swing.JLabel();
        jtfLastName = new javax.swing.JTextField();
        jlTitle = new javax.swing.JLabel();
        jtfTitle = new javax.swing.JTextField();
        jlDevice = new javax.swing.JLabel();
        jcbDevice = new javax.swing.JComboBox();
        jpParameters = new javax.swing.JPanel();
        jbDone = new javax.swing.JButton();
        jcbConfigs = new javax.swing.JComboBox();
        jpCells = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtInputs = new javax.swing.JTable();
        jtbAuto = new javax.swing.JToggleButton();
        jlFirstValue = new javax.swing.JLabel();
        jftfFirstValue = new JFormattedTextField(formatter2);
        jpGraphics = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jpHistory = new javax.swing.JPanel();
        jpbGraphics = new javax.swing.JProgressBar();
        jbPause = new javax.swing.JButton();
        jpResults = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpOperator.setBorder(javax.swing.BorderFactory.createTitledBorder("Оператор"));

        jlSurname.setText("Фамилия:");

        jlName.setText("Имя:");

        jbInput.setText("Вход");
        jbInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInputActionPerformed(evt);
            }
        });

        jlLastName.setText("Отчество:");

        jlTitle.setText("Должность:");

        jlDevice.setText("Прибор:");

        for (int i = 0; i < RDD.devicesDiscovered.size(); i++){
            try {
                jcbDevice.addItem(RDD.devicesDiscovered.get(i).getFriendlyName(false));
            } catch (IOException cantGetDeviceName) {
            }

        }

        javax.swing.GroupLayout jpOperatorLayout = new javax.swing.GroupLayout(jpOperator);
        jpOperator.setLayout(jpOperatorLayout);
        jpOperatorLayout.setHorizontalGroup(
            jpOperatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpOperatorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbInput)
                .addContainerGap())
            .addGroup(jpOperatorLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jpOperatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpOperatorLayout.createSequentialGroup()
                        .addGroup(jpOperatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlName)
                            .addComponent(jlLastName)
                            .addComponent(jlSurname))
                        .addGap(18, 18, 18)
                        .addGroup(jpOperatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpOperatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtfSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpOperatorLayout.createSequentialGroup()
                        .addGroup(jpOperatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlTitle)
                            .addComponent(jlDevice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpOperatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfTitle)
                            .addComponent(jcbDevice, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jpOperatorLayout.setVerticalGroup(
            jpOperatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpOperatorLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jpOperatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSurname)
                    .addComponent(jtfSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpOperatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlName)
                    .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jpOperatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlLastName)
                    .addComponent(jtfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jpOperatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlTitle)
                    .addComponent(jtfTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpOperatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlDevice)
                    .addComponent(jcbDevice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbInput)
                .addContainerGap())
        );

        javax.swing.GroupLayout jpInputLayout = new javax.swing.GroupLayout(jpInput);
        jpInput.setLayout(jpInputLayout);
        jpInputLayout.setHorizontalGroup(
            jpInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInputLayout.createSequentialGroup()
                .addGap(393, 393, 393)
                .addComponent(jpOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(412, Short.MAX_VALUE))
        );
        jpInputLayout.setVerticalGroup(
            jpInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInputLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jpOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Вход", jpInput);

        jbDone.setText("Готово");
        jbDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDoneActionPerformed(evt);
            }
        });

        jcbConfigs.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Config 1", "Config 2", "Config 3", "Config 4" }));

        jpCells.setBorder(javax.swing.BorderFactory.createTitledBorder("Ячейки"));

        jtInputs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Заголовок 5", "Заголовок 6"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtInputs.setTableHeader(null);
        jtInputs.setColumnSelectionAllowed(true);
        JFormattedTextField field1 = new JFormattedTextField(formatter1);
        field1.setText("");
        TableCellEditor editor = new DefaultCellEditor(field1);
        jtInputs.getColumnModel().getColumn(0).setCellEditor(editor);
        jtInputs.getColumnModel().getColumn(1).setCellEditor(editor);
        jtInputs.getColumnModel().getColumn(2).setCellEditor(editor);
        jtInputs.getColumnModel().getColumn(3).setCellEditor(editor);
        jtInputs.getColumnModel().getColumn(4).setCellEditor(editor);
        jtInputs.getColumnModel().getColumn(5).setCellEditor(editor);
        jScrollPane1.setViewportView(jtInputs);
        jtInputs.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jtbAuto.setText("Автозаполнение");
        jtbAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbAutoActionPerformed(evt);
            }
        });

        jlFirstValue.setText("Введите первое значение:");

        javax.swing.GroupLayout jpCellsLayout = new javax.swing.GroupLayout(jpCells);
        jpCells.setLayout(jpCellsLayout);
        jpCellsLayout.setHorizontalGroup(
            jpCellsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCellsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jpCellsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCellsLayout.createSequentialGroup()
                        .addComponent(jlFirstValue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jftfFirstValue, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtbAuto))))
        );
        jpCellsLayout.setVerticalGroup(
            jpCellsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCellsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpCellsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtbAuto)
                    .addComponent(jlFirstValue)
                    .addComponent(jftfFirstValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jpParametersLayout = new javax.swing.GroupLayout(jpParameters);
        jpParameters.setLayout(jpParametersLayout);
        jpParametersLayout.setHorizontalGroup(
            jpParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpParametersLayout.createSequentialGroup()
                .addComponent(jpCells, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 557, Short.MAX_VALUE)
                .addGroup(jpParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbDone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbConfigs, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpParametersLayout.setVerticalGroup(
            jpParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpParametersLayout.createSequentialGroup()
                .addGroup(jpParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpParametersLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jcbConfigs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jpCells, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 311, Short.MAX_VALUE)
                .addComponent(jbDone)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Параметры", jpParameters);

        jpHistory.setBorder(javax.swing.BorderFactory.createTitledBorder("Обозначения"));
        jpHistory.setLayout(new javax.swing.BoxLayout(jpHistory, javax.swing.BoxLayout.PAGE_AXIS));
        jScrollPane2.setViewportView(jpHistory);

        jpbGraphics.setIndeterminate(true);

        jbPause.setText("Старт/Стоп");
        jbPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPauseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpGraphicsLayout = new javax.swing.GroupLayout(jpGraphics);
        jpGraphics.setLayout(jpGraphicsLayout);
        jpGraphicsLayout.setHorizontalGroup(
            jpGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpGraphicsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpGraphicsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpGraphicsLayout.createSequentialGroup()
                        .addComponent(jpbGraphics, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 315, Short.MAX_VALUE)
                        .addComponent(jbPause)))
                .addContainerGap())
        );
        jpGraphicsLayout.setVerticalGroup(
            jpGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpGraphicsLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpbGraphics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jpGraphicsLayout.createSequentialGroup()
                        .addComponent(jbPause)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("График", jpGraphics);

        javax.swing.GroupLayout jpResultsLayout = new javax.swing.GroupLayout(jpResults);
        jpResults.setLayout(jpResultsLayout);
        jpResultsLayout.setHorizontalGroup(
            jpResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1100, Short.MAX_VALUE)
        );
        jpResultsLayout.setVerticalGroup(
            jpResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 527, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Результаты", jpResults);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jTabbedPane1.setEnabledAt(1, false);
        jTabbedPane1.setEnabledAt(2, false);
        jTabbedPane1.setEnabledAt(3, false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setDataTable(){
        for (int j = 0; j < 6; j++) {
            for (int i = 0; i < 8; i++) {
                TABEL_MOD.setValueAt("", i, j);
            }
        }
    }
    
    private void getDataTable(){
        int numb = 0;
        for (int j = 0; j < 8; j++) {
            for (int i = 0; i < 6; i++) {
                if (!TABEL_MOD.getValueAt(j, i).toString().equals("") && !TABEL_MOD.getValueAt(j, i).toString().equals("   ")){
                    numb = j*6 + i+1;                
                    jpHistory.add(new NewJPanel(numb, TABEL_MOD.getValueAt(j, i).toString()));
                }
                
            }
        }
    }
    
    
    private void jbInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInputActionPerformed
          
        jTabbedPane1.setEnabledAt(1, true);
        setDataTable();
        jTabbedPane1.setSelectedIndex(1);
        jTabbedPane1.setEnabledAt(0, false);
        SS = new ServicesSearch(RDD.devicesDiscovered.get(jcbDevice.getSelectedIndex()));
    }//GEN-LAST:event_jbInputActionPerformed

    
    private void jbDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDoneActionPerformed
        
        jTabbedPane1.setEnabledAt(2, true);
        if (jtInputs.isEditing()){
            jtInputs.getCellEditor(jtInputs.getEditingRow(), jtInputs.getEditingColumn()).stopCellEditing();
        }
        getDataTable();
        jpbGraphics.setIndeterminate(true);
        jTabbedPane1.setSelectedIndex(2);
        jTabbedPane1.setEnabledAt(1, false);
        
    }//GEN-LAST:event_jbDoneActionPerformed

    private void jbPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPauseActionPerformed
        if(jpbGraphics.isIndeterminate()){
            jpbGraphics.setIndeterminate(false);
        } else {
            jpbGraphics.setIndeterminate(true);    
        }
    }//GEN-LAST:event_jbPauseActionPerformed

    private void jtbAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbAutoActionPerformed
        try {
            commonInt = Integer.parseInt(jftfFirstValue.getText().replaceAll(" ", ""));  
        } catch (NumberFormatException e) {  
            System.err.println("Неверный формат строки!");  
        }    
    }//GEN-LAST:event_jtbAutoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbDone;
    private javax.swing.JButton jbInput;
    private javax.swing.JButton jbPause;
    private javax.swing.JComboBox jcbConfigs;
    private javax.swing.JComboBox jcbDevice;
    private javax.swing.JFormattedTextField jftfFirstValue;
    private javax.swing.JLabel jlDevice;
    private javax.swing.JLabel jlFirstValue;
    private javax.swing.JLabel jlLastName;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlSurname;
    private javax.swing.JLabel jlTitle;
    private javax.swing.JPanel jpCells;
    private javax.swing.JPanel jpGraphics;
    private javax.swing.JPanel jpHistory;
    private javax.swing.JPanel jpInput;
    private javax.swing.JPanel jpOperator;
    private javax.swing.JPanel jpParameters;
    private javax.swing.JPanel jpResults;
    private javax.swing.JProgressBar jpbGraphics;
    private javax.swing.JTable jtInputs;
    private javax.swing.JToggleButton jtbAuto;
    private javax.swing.JTextField jtfLastName;
    private javax.swing.JTextField jtfName;
    private javax.swing.JTextField jtfSurname;
    private javax.swing.JTextField jtfTitle;
    // End of variables declaration//GEN-END:variables
}
